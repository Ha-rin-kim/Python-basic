'''
일정 관리 프로그램
프로그램이 시작되면 list.txt에 내용을 읽어 등록된 일정을 출력
사용자는 1.일정 추가 2.일정 삭제 3.프로그램 종료 중 하나를 선택
일정 추가 : 사용자 입력을 받아 파일 끝에 추가
일정 삭제 : 몇번째 일정을 삭제할 것인지 사용자 입력을 받아 삭제
'''
#함수 정의
#list.txt 파일을 읽기모드로 연 뒤 줄단위로 내용을 출력 및 리스트 반환
def 일정출력():
    파일 = open('list.txt')
    일정들 = 파일.readlines() #줄단위 요소로 구성된 리스트 저장
    파일.close()
    print("등록된 일정")
    #enumerate(리스트/튜플) : 리스트의 데이터와 인덱스번호를 튜플로 묶어주는 함수
    for 횟수,일정 in enumerate(일정들):
        print("%s. %s" % (횟수+1, 일정) )
    return 일정들
#일정 추가 메뉴 선택 시 동작할 함수
#사용자 입력 -> 추가모드로 파일을 연 뒤 사용자 입력을 추가
def 일정추가(일정들):
    입력 = input('새로 추가할 일정 입력 : ')
    if 입력 == '': #if not 입력:
        print("입력한 정보가 없음")
        return 일정들
    일정들.append(입력+'\n') #입력 끝에 줄바꿈 추가

    파일 = open('list.txt','a')
    파일.write(입력+"\n")
    파일.close()
    return 일정들
#일정 삭제 메뉴 선택 시 동작할 함수
#사용자 입력 -> 해당하는 줄에 일정을 삭제
def 일정삭제(일정들):
    입력 = int(input('삭제할 일정을 입력 : '))
    if not( 1 <= 입력 <= len(일정들) ):
        print('범위를 벗어나는 입력')
        return 일정들
    입력 -= 1 #리스트 인덱스는 0부터 시작하므로 1을 뺌
    del 일정들[입력] #일정들에서 '입력'인덱스에 해당하는 요소를 삭제
    
    파일 = open('list.txt', 'w')
    for 일정 in 일정들:
        파일.write(일정)
    파일.close()
    return 일정들
#일정 출력함수 호출
일정들 = 일정출력()
#무한반복
while True:
    #메뉴 제공
    print('1.일정 추가 2.일정 삭제 3.프로그램 종료')
    #사용자 입력 받기(메뉴선택)
    입력 = int(input('메뉴 선택 : '))
    #메뉴에 대한 함수 호출
    if 입력 == 1:
        일정들 = 일정추가(일정들)
    elif 입력 == 2:
        일정들 = 일정삭제(일정들)
    elif 입력 == 3:
        print('프로그램 종료')
        break














